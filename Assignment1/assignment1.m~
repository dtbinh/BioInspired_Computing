%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% BioInspired Computing - UnB 2/2017
% Jess√© Barreto - 17/0067033
% Assignment 1 - Plot implemented cost functions.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

clc;
close all;
clear all;

% Plot characteristics
dimension = 2;
ranges = [-5, 5; -5, 5];
npoints = 100;

% Plot Spheric Cost Function
functionName = string('sphere');
[space, sphere] = costFunction(functionName, dimension, ranges, npoints);
figure(1);
hold on;
xlabel('X');
ylabel('Y');
zlabel('Cost Function Value');
contour(sphere);
view(20,40);
mesh(sphere);
title('Sphere Cost Function - Z = X^2 + Y^2');
saveas(figure(1), 'Figures/Sphere.png');

% Plot Quadric Cost Function
functionName = string('quadric');
[space, quadric] = costFunction(functionName, dimension, ranges, npoints);
figure(2);
hold on;
xlabel('X');
ylabel('Y');
zlabel('Cost Function Value');
contour(quadric);
view(20,40);
mesh(quadric);
title('Quadric Cost Function - Z = X^2 + (X + Y)^2');
saveas(figure(2), 'Figures/Quadric.png');

% Plot Elliptic Cost Function
functionName = string('elliptic');
[space, elliptic] = costFunction(functionName, dimension, ranges, npoints);
figure(3);
hold on;
xlabel('X');
ylabel('Y');
zlabel('Cost Function Value');
contour(elliptic);
view(20,40);
mesh(elliptic);
title('Elliptic Cost Function - Z = X^2 + 10^6 * Y^2');
saveas(figure(3), 'Figures/Elliptic.png');

% Plot Rastrigin Cost Function
functionName = string('rastrigin');
[space, rastrigin] = costFunction(functionName, dimension, ranges, npoints);
figure(4);
hold on;
xlabel('X');
ylabel('Y');
zlabel('Cost Function Value');
contour(rastrigin);
view(20,40);
mesh(rastrigin);
title('Rastrigin Cost Function - X^2 - 10 * cos(2 * pi * X) + 10 + (Y^2 - 10 * cos(2 * pi * Y) + 10');
saveas(figure(4), 'Figures/Rastrigin.png');

% Plot Rosenbrock Cost Function
functionName = string('rosenbrock');
[space, rosenbrock] = costFunction(functionName, dimension, ranges, npoints);
figure(5);
hold on;
xlabel('X');
ylabel('Y');
zlabel('Cost Function Value');
contour(rosenbrock);
view(20,40);
mesh(rosenbrock);
title('Rosenbrock Cost Function - 100 * (X^2 - Y)^2 + (X - 1)^2');
saveas(figure(5), 'Figures/Rosenbrock.png');


% Plot Ackley Cost Function
functionName = string('ackley');
[space, ackley] = costFunction(functionName, dimension, ranges, npoints);
figure(6);
hold on;
xlabel('X');
ylabel('Y');
zlabel('Cost Function Value');
contour(ackley);
view(20,40);
mesh(ackley);
title('Ackley Cost Function - F = -20 * exp(-0.2 * sqrt((X^2 + Y^2) / 2)) - exp((cos(2 * pi * X) + cos(2 * pi * Y)) / 2) + 20 + e');
saveas(figure(6), 'Figures/Ackley.png');

% Plot Schwefel Cost Function
functionName = string('schwefel');
[space, schwefel] = costFunction(functionName, dimension, ranges, npoints);
figure(7);
surf(schwefel);
title('Schwefel Cost Function');
